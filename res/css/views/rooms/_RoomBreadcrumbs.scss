/*
Copyright 2019 New Vector Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

.mx_RoomBreadcrumbs {
    position: relative;
    height: 42px;
    padding: 8px;
    padding-bottom: 0;
    display: flex;
    flex-direction: row;

    // repeating circles as empty placeholders
    background:
        radial-gradient(
            circle at center,
            $breadcrumb-placeholder-bg-color,
            $breadcrumb-placeholder-bg-color 15px,
            transparent 16px
        );
    background-size: 36px;
    background-position: 6px -1px;
    background-repeat: repeat-x;


    // Autohide the scrollbar
    overflow-x: hidden;
    &:hover {
        overflow-x: visible;
    }

    .mx_AutoHideScrollbar {
        display: flex;
        flex-direction: row;
        height: 100%;
    }

    .mx_RoomBreadcrumbs_crumb {
        margin-left: 4px;
        height: 32px;
        display: inline-block;
        transition: transform 0.3s, width 0.3s;
        position: relative;

        .mx_RoomTile_badge {
            position: absolute;
            top: -3px;
            right: -4px;
        }

        .mx_RoomBreadcrumbs_dmIndicator {
            position: absolute;
            bottom: 0;
            right: -4px;
        }
    }

    .mx_RoomBreadcrumbs_animate {
        margin-left: 0;
        width: 32px;
        transform: scale(1);
    }

    .mx_RoomBreadcrumbs_preAnimate {
        width: 0;
        transform: scale(0);
    }

    .mx_RoomBreadcrumbs_left {
        opacity: 0.5;
    }

    // Note: we have to manually control the gradient and stuff, but the IndicatorScrollbar
    // will deal with left/right positioning for us. Normally we'd use position:sticky on
    // a few key elements, however that doesn't work in horizontal scrolling scenarios.

    .mx_IndicatorScrollbar_leftOverflowIndicator,
    .mx_IndicatorScrollbar_rightOverflowIndicator {
        display: none;
    }

    .mx_IndicatorScrollbar_leftOverflowIndicator {
        background: linear-gradient(to left, $panel-gradient);
    }

    .mx_IndicatorScrollbar_rightOverflowIndicator {
        background: linear-gradient(to right, $panel-gradient);
    }

    &.mx_IndicatorScrollbar_leftOverflow .mx_IndicatorScrollbar_leftOverflowIndicator,
    &.mx_IndicatorScrollbar_rightOverflow .mx_IndicatorScrollbar_rightOverflowIndicator {
        position: absolute;
        top: 0;
        bottom: 0;
        width: 15px;
        display: block;
        pointer-events: none;
        z-index: 100;
    }
}
